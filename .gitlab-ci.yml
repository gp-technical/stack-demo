#version: 0.12.36708044
image: registry.gitlab.com/goodpractice/devops-tools:latest
stages:
  - check
  - build
  - release
  - deploy
  - slack
before_script:
  - curl -H 'Cache-Control:no-cache, no-store' https://s3.eu-west-2.amazonaws.com/goodpractice-cli/install.sh | sh
after_script:
  - echo ${CI_JOB_STAGE}:${CI_JOB_NAME} > LAST_JOB
check:
  stage: check
  script:
    - gp ci:check
  artifacts:
    paths:
      - LAST_JOB
    when: on_failure
build:
  stage: build
  script:
    - gp login
    - gp ci:build -s docker-app -t $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA
  artifacts:
    paths:
      - LAST_JOB
    when: on_failure
release:
  stage: release
  script:
    - gp login
    - gp ci:release -a $CI_PROJECT_NAME -e dev
    - gp ci:release -a $CI_PROJECT_NAME -e stg
    - gp ci:release -a $CI_PROJECT_NAME -e live
  artifacts:
    paths:
      - VAULT_VERSION_DEV
      - VAULT_VERSION_STG
      - VAULT_VERSION_LIVE
      - LAST_JOB
dev:manual:
  stage: deploy
  script:
    - gp login
    - gp ci:deploy -s docker-app -a $CI_PROJECT_NAME -e dev -t $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA -n $CI_DEV_NETWORK_NAME
    - gp slack:deploy
  artifacts:
    paths:
      - LAST_JOB
    when: on_failure
  environment:
    name: dev
    url: https://$CI_PROJECT_NAME.development.goodpractice.net
  when: manual
  except:
    - develop
  tags:
    - dev
dev:
  stage: deploy
  script:
    - gp login
    - gp ci:deploy -s docker-app -a $CI_PROJECT_NAME -e dev -t $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA -n $CI_DEV_NETWORK_NAME
    - gp slack:deploy
  artifacts:
    paths:
      - LAST_JOB
    when: on_failure
  environment:
    name: dev
    url: https://$CI_PROJECT_NAME.development.goodpractice.net
  only:
    - develop
  tags:
    - dev
stg:manual:
  stage: deploy
  script:
    - gp login
    - gp ci:deploy -s docker-app -a $CI_PROJECT_NAME -e stg -t $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA -n $CI_STG_NETWORK_NAME
    - gp slack:deploy
  artifacts:
    paths:
      - LAST_JOB
    when: on_failure
  environment:
    name: stg
    url: https://$CI_PROJECT_NAME.staging.goodpractice.net
  when: manual
  only:
    - /^hotfix\/*/
    - master
    - tags
  tags:
    - stg
stg:
  stage: deploy
  script:
    - gp login
    - gp ci:deploy -s docker-app -a $CI_PROJECT_NAME -e stg -t $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA -n $CI_STG_NETWORK_NAME
    - gp slack:deploy
  artifacts:
    paths:
      - LAST_JOB
    when: on_failure
  environment:
    name: stg
    url: https://$CI_PROJECT_NAME.staging.goodpractice.net
  only:
    - /^release\/*/
  tags:
    - stg
live:manual:
  stage: deploy
  script:
    - gp login
    - gp ci:deploy -s docker-app -a $CI_PROJECT_NAME -e live -t $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA -n $CI_LIVE_NETWORK_NAME
    - gp slack:deploy
  artifacts:
    paths:
      - LAST_JOB
    when: on_failure
  environment:
    name: live
    url: https://$CI_PROJECT_NAME.goodpractice.net
  when: manual
  only:
    - master
    - tags
  tags:
    - live
success:
  stage: slack
  script:
    - gp slack:success
error:
  stage: slack
  script:
    - cat LAST_JOB
    - gp slack:error
  when: on_failure
